# THIS IS JUST AN EXAMPLE CONFIGURATION - PLEASE RENAME TO ButlerSpeak.properties AND ADJUST THE VALUES!
# ENSURE THAT THIS FILE IS ADDED TO THE SAME DIRECTORY AS THE JAR FILE!

# ButlerSpeak - TeamSpeak 3 Server Query Bot
# Copyright (C) 2019 FLOODY88 (https://github.com/FLOODY88)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# The bot's name.
bot.username=ButlerSpeak
# The channel the bot connects to.
bot.channel=1337
# Slowmode for the query.
# Please enable this, unless the IP address the bot is running on, is whitelisted in query_ip_whitelist.txt for your
# TeamSpeak3 server.
# NOTE: If you are running the bot on the same machine, use 127.0.0.1 as host which is whitelisted by default.
bot.slowmode=true
# Defines which features should be enabled (multiple features should be separated by a comma).
# 	welcome 		- The welcome messages
#	badname 		- The name checker for forbidden words
#	recording 		- The recording checker
#	support 		- The support handler
# 	advertisement 	- The advertiser
# 	afk 			- The afk manager
bot.plugins=welcome, badname, recording, support, advertisement, afk
# The host to connect to.
# Use 127.0.0.1 when the bot is running on the same machine as the TeamSpeak3 server.
server.host=127.0.0.1
# The server's port.
server.port=9987
# The query's login credentials.
query.username=serveradmin
query.password=hackablepassword
# The query port to connect to.
query.port=10011

# Amount of connections till the client won't receive any welcome message.
#   -1: Always send welcome message
#   >0: Amount of connections till clients should receive the welcome message
welcome.connections=-1
# Groups that should NOT RECEIVE the welcome message.
#   -1: Every group should receive the welcome message
#   <groupId>: Ids of the server groups that should be excluded (separated by a comma)
welcome.groups=-1
# The message clients receive upon connection (support TeamSpeak3's BBCodes).
# You may use one of the following placeholders for the client's information:
#   %clientName%        - The client's name
#   %clientIP%          - The client's IP
#   %clientCountry%     - The client's country
#   %totalConnections%  - The client's total connections to the server
#   %lastConnection%    - The last connection to the server
welcome.message=Welcome, %clientName%! This is your %totalConnections%th connection. You're \
  connecting from %clientCountry% with the IP %clientIP%. You last connection was on \
  %lastConnection%.

# Amount of time after clients will be moved (in seconds)
afk.idle-time=90
# The channel id to move the idling clients to.
afk.channel=1337
# Whether client's should receive a message when being moved.
afk.notify=true
# Notification type (chat or poke)
afk.notify-type=poke
# The notification message clients receive when moved.
afk.notify-message=You have been moved for idling too long!
# Kick the client if being idle too long.
afk.kick=true
# Amount of time after the client should be kicked (in seconds).
afk.kick-time=180
# They message that will be displayed as reason.
afk.kick-reason=You've been kicked for idling too long!
# Groups that should be excluded from being moved.
#   -1: Every group should be affected
#   <groupId>: Ids of the server groups that should be excluded (separated by a comma)
afk.bypass-groups=1337
# Channel that should be excluded from being moved.
#   -1: Every group should be affected
#   <channelId>: Ids channel that should be excluded (separated by a comma)
afk.bypass-channel=1337

# Whether the channel should be renamed or deleted.
#   delete - Deletes the channel that matches the pattern
#   rename - Tries to renames the channel that matches the pattern, if this fails, the channel will be deleted
badname.channel-action=rename
# The channel name after renaming.
# You may use the following placeholder:
#   %date% - The time the channel was renamed (dd-MMMM-yyyy hh:mm)
badname.channel-rename=CENSORED on %date%
# Whether to kick the client that matches the pattern.
#   kick - Kicks the client
#   warn - Warns the client (Note that the client will only be warned once, nothing happens after the first warning)
badname.client-action=warn
# Warn message if a client's name matches the pattern.
badname.client-warn-message=Please change your name!
# The message which will be displayed as reason if the client's name matches the pattern.
badname.client-kick-message=You have been kick for using forbidden words in your nickname! Please change it before \
  connecting again.
# Groups that should be excluded from being checked.
#   -1: Every group should be affected
#   <groupId>: Ids of the server groups that should be excluded (separated by a comma)
badname.bypass-groups=1337
# Channel that should be excluded from being checked.
#   -1: Every channel should be affected
#   <channelId>: Ids channel that should be excluded (separated by a comma)
badname.bypass-channel=1337
# RegEx pattern that should be checked.
# Please see this link for further explanation: https://www.oracle.com/technetwork/articles/java/regex-1564923.html
# Check your pattern before applying any changes using this website: https://regexr.com/
# Please separate different patterns by a comma (Thus, do not use any comma in your RegEx).
# The default pattern checks for variations of 'fuck'.
badname.pattern=.*f[u4]ck.*
# The action which should be performed when a client is recording.
#   kick - Kick the client from the server
#   move - Moves the client to the default channel
recording.action=kick
# The message a client will receive when being kicked for recording.
recording.kick-message=You have been kicked for recording!
# The message a client will receive when being moved for recording.
recording.move-message=You have been moved for recording in this channel!
# The channel that should be ignored when checking for clients that are recording.
#   -1: Every channel should be checked
#   <channelId>: Ids of channels that allow recording
recording.bypass-channel=1337
# Groups that should be excluded from being checked.
#   -1: Every group should be affected
#   <groupId>: Ids of the server groups that should be excluded (separated by a comma)
recording.bypass-groups=1337
# The support channel's id.
support.channel=1337
# Whether a new sub-channel should be created when a client join the above channel.
support.channel-create=true
# The name of the sub-channel.
# You may use one of the following placeholders:
#   %clientName% - The client's name
#   %date% - The time the channel was created (hh:mm)
support.channel-name=%clientName% (%date%)
# Groups that should be notified once a client enters the support channel.
# Several groups should be separated by a comma
support.notify-groups=1337
# Whether the notification should be sent as poke or private message.
#   poke - The notification will be sent as poke
#   chat - The notification will be send as a private message
support.notify-action=poke
# The notification message the specified groups receive.
# You may use the following placeholders:
#   %clientName% - The name of the client who requested help
support.notify-message=%clientName% needs your help!
# The notification the client, who requested help, should receive once entering the support channel
support.message=All online admins have been notified. Please stay put.
# The notification the client, who requested help, should receive when no client with the specified group is online
support.message-fail=No admins are currently available, please try again later.
# The message that will be broadcasted to the server.
advertisement.message=This message will be broadcasted to the whole server!
# The interval the advertisement will be broadcasted (in minutes).
advertisement.delay=1